module keypad

include "libs/LCD"  ' Include both used modules
include "libs/PWM_timers"  ' Include both used modules
include "libs/EEprom"  ' Include both used modules
include "libs/milady_shamsi"  ' Include both used modules
include "libs/TWI"  ' Include both used modules


dim txt33 as string[1] external
  txt_pwm1,txt_pwm2,txt_pwm3,txt_pwm4,txt_pwm5,txt_Pwm6,txt_pwm7,txt_pwm8,txt_pwm9 as string [3]   external
  txt2 as string[16]  external
dim txt3 ,txt1 as string[19]  external
dim txt11,txt22 as string[2] external
dim txt as string[19]   external
    text_1  as string[16]     external
dim while_state_import,oldstate_2 ,oldstate_3 as bit   external
dim var_in_global,chanel,on_off2,Pwm_chanel as Byte      external

dim k_set,K_set_max as  byte   external
dim kp1, ok1 ,K_set_max as byte external

dim week_new,Yes_no as  byte    external
 dim while_state_2,oldstate_menu as bit      external
 
dim oldstate,oldstate_4,oldstate_3,while_state_import,oldstate_2,while_state_import_main as bit    external
dim oldstate,oldstate_up,oldstate_down,oldstate_ok,oldstate_ww,while_state,while_satate_in_1 as bit external
dim kp,ok,k_set,week_new,chanel,Pwm_Percent,Pwm_chanel,Pwm_chanel_main ,Yes_no,on_off,on_off2 as  byte external
dim while_state_blinking,while_satat as bit  external

dim on_a_0 as Byte[7][4][7][2][4]  external ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
dim on_a_1 as Byte[7][4][7][2][4]  external ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'dim on_a_1 as integer[7][4][7][2][4]  external ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'dim on_a_0 as byte[7][1][3][2][4]   external'' on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off22-1][0]


dim hours, minutes, seconds, day, week, month, year as byte   external ' Global date/time variables

sub procedure Lcd_0()    external
'sub procedure PWM_MAKE(dim jj as byte,dim max_duty as integer,dim Pwm_chanel_make as byte)   external
 sub procedure Read_Time(dim p_hours as ^byte, dim p_minutes as ^byte, dim p_seconds as ^byte,
              dim p_day as ^byte, dim p_week as ^byte, dim p_month as ^byte, dim p_year as ^byte) external
              
'sub procedure Shamsi_call()   external

sub procedure Write_Time(dim c_hours as byte, dim c_minutes as byte, dim c_seconds as byte,
               dim c_day as byte, dim c_week as byte, dim c_month as byte, dim c_year as byte) external

sub procedure Shamsi_transfer_time()  external
'sub procedure eeprom_save_ext_twi() external'dim on_a_0 as integer[7][2][7][2][4] )

sub procedure Keypad_set__date_time_import_PWM_Red_teben(dim mode_1,Pwm_chanel_red,var_in as byte, dim p_max as  byte, dim p_min as  byte,dim pwm1,pwm2,pwm3,pwm4,pwm5,pwm6,pwm7,pwm8,pwm9 as byte )



implements


'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_on_off(dim var_in as byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    while_state_import=1
    oldstate_2=0
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in=p_max) then
              var_in=p_min

          LCD_Out(2,9, "On setting")  ''Show on LCD
          LCD_Out(2,1, "Value: ")  ''Show on LCD
          Delay_mS(100)
          else
             var_in=var_in+1
             LCD_Out(2,9, "Off setting")  ''Show on LCD
          LCD_Out(2,1, "Value: ")  ''Show on LCD
          Delay_mS(100)
          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in=p_min) then
              var_in=p_max
              LCD_Out(2,9, "Off setting")  ''Show on LCD
          LCD_Out(2,1, "Value : ")  ''Show on LCD
          Delay_mS(100)
          else
             var_in=var_in-1
             LCD_Out(2,9, "On setting")  ''Show on LCD
          LCD_Out(2,1, "Value : ")  ''Show on LCD
          Delay_mS(100)
          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
'           Lcd_0()
'           LCD_Out(2,1, "Exit No save !!! ")  ''Show on LCD
'           Delay_mS(100)
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
           if (var_in=p_min) then
              var_in=p_max
              LCD_Out(2,9, "Off ")  ''Show on LCD
          LCD_Out(2,1, "Value: ")  ''Show on LCD
          Delay_mS(100)
          else
'             var_in=var_in-1
             LCD_Out(2,9, "On setting")  ''Show on LCD
          LCD_Out(2,1, "Value: ")  ''Show on LCD
          Delay_mS(100)
          end if
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************
'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_week_day_teben(dim var_in as byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    while_state_import=1
    oldstate_2=0
'    Lcd_0()
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
         select case var_in
              case 1
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Pls Choose Program Number:")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in=p_max) then
              var_in=p_min
          else
             var_in=var_in+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in=p_min) then
              var_in=p_max
          else
             var_in=var_in-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
           Lcd_0()
           LCD_Out(1,1, "Day ")  ''Show on LCD
           inttostr(var_in,txt)
           LCD_Out(1,6, txt)  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
          k_set=k_set+1
          if k_set=K_set_max then
                    k_set=1
          end if
           Lcd_0()
           LCD_Out(1,1, "Day ")  ''Show on LCD
           inttostr(var_in,txt)
           LCD_Out(1,6, txt)  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_On_off_teben(dim week_day,var_in as byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    while_state_import=1
    oldstate_2=0
'    Lcd_0()
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
      if var_in=1 then
         select case week_day
              case 1
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(  :Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select
      else
          select case week_day
              case 1
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "v1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "(On:   )  (PWM)")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
              end select
         end if
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in=p_max) then
              var_in=p_min
          else
             var_in=var_in+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in=p_min) then
              var_in=p_max
          else
             var_in=var_in-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
           Lcd_0()
           if var_in=2 then
           LCD_Out(1,1, "Off time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
            LCD_Out(1,1, "On time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           end if
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
           Lcd_0()
            k_set=k_set+1
            if k_set=K_set_max then
                    k_set=1
            end if
           if var_in=2 then
           LCD_Out(1,1, "Off time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
            LCD_Out(1,1, "On time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           end if
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************

'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_Yes_No_teben(dim week_day,chanel_1,var_in as byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    while_state_import=1
    oldstate_2=0
    Lcd_0()

     bytetostr(chanel,txt33)

'                    delay_ms(1111)
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
      if var_in=1 then
         select case week_day
              case 1
                   LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "Yes|No Chanel:")   LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "Yes|No Chanel:")   LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "Yes|No Chanel:")   LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "Yes|No Chanel:")  LCD_Out(1,14,txt33)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "   |No Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select
      else
          select case week_day
              case 1
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Dy:Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "Yes|No Chanel:")   LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "Yes|No Chanel:")   LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "Yes|No Chanel:")    LCD_Out(1,14,txt33)
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "Yes|   Chanel:  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
              end select
         end if
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in=p_max) then
              var_in=p_min
          else
             var_in=var_in+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in=p_min) then
              var_in=p_max
          else
             var_in=var_in-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0

           Lcd_0()
           if var_in=1 then  'yes is selected
           k_set=k_set-2
           on_off2=1  ''on mode
           chanel=chanel_1+1
           if k_set=K_set_max then
                    k_set=1
           end if
                   bytetostr(chanel,txt)
           LCD_Out(1,1, "Chanel") lcd_out(1,8,txt) LCD_Out(1,9, "time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
'           k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
            LCD_Out(1,1, "Time Table is ")  ''Show on LCD
           LCD_Out(2,1, "Completed !!!")
           Delay_mS(500)
           end if
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
'           chanel=chanel_1+1
           Lcd_0()
           if var_in=1 then  'yes is selected
           k_set=k_set-2

           on_off2=1  ''on mode
           chanel=chanel_1+1
           if k_set=K_set_max then
                    k_set=1
           end if
                   bytetostr(chanel,txt)
           LCD_Out(1,1, "Chanel") lcd_out(1,8,txt) LCD_Out(1,9, "time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
'           k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
            LCD_Out(1,1, "Time Table is ")  ''Show on LCD
           LCD_Out(2,1, "Completed !!!")
           Delay_mS(500)
           end if
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************


    '**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_On_minut_teben(dim week_day,var_in,var_in2 as Byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
dim txt_ch22 as string [2]
    while_state_import=1
    oldstate_2=0
    Lcd_0()

'                        ByteToStr(var_in,txt11)
'                    ByteToStr(var_in2,txt22)

'                    LCD_Out(1,5,txt11) LCD_Out(1,8,txt22)LCD_Out(1,8,":")
'                     LCD_Out(2,1, "1 2 3 4 5 6 7")  ''Show on LCD
'                     Delay_mS(1100)

'                    txt22="  "

'                     LCD_Out(1,5,"   ") LCD_Out(1,8,txt22) LCD_Out(1,8,":")
'                    LCD_Out(2,1, "  2 3 4 5 6 7")  ''Show on LCD
'                    Delay_mS(1100)
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
        ByteToStr(var_in,txt11)
        ByteToStr(var_in2,txt22)
        Bytetostr(chanel,txt_ch22)
      if 1=1 then
         select case week_day
              case 1

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                      LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                     LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                     LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                     LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select


         end if
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in2>=p_max) then
              var_in2=p_min
          else
             var_in2=var_in2+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in2<=p_min) then
              var_in2=p_max
          else
             var_in2=var_in2-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
           Lcd_0()

            LCD_Out(1,1, "On time is ")  ''Show on LCD
           bytetostr(var_in,txt11)
           bytetostr(var_in2,txt22)
           LCD_Out(2,5,txt11) LCD_Out(2,8,txt22)LCD_Out(2,8,":")
           Delay_mS(500)

         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
           Lcd_0()
'           Lcd_0()
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
            LCD_Out(1,1, "On time is ")  ''Show on LCD
           bytetostr(var_in,txt11)
           bytetostr(var_in2,txt22)
          LCD_Out(2,5,txt11) LCD_Out(2,8,txt22)LCD_Out(2,8,":")
           Delay_mS(500)
        end if
    var_in_global= var_in2
  wend
 end sub
'**************************************************************************************************
     '**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_off_minut_teben(dim week_day,var_in,var_in2 as Byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
dim txt_ch22 as string [2]
    while_state_import=1
    oldstate_2=0
   Lcd_0()


'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
      ByteToStr(var_in,txt11)
      ByteToStr(var_in2,txt22)
      Bytetostr(chanel,txt_ch22)
      if 1=1 then
         select case week_day
              case 1

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")

                    LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                     LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                   LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, ":Dy1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                   LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,2,txt_ch22) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt22="   "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select


         end if
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in2>=p_max) then
              var_in2=p_min
          else
             var_in2=var_in2+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in2<=p_min) then
              var_in2=p_max
          else
             var_in2=var_in2-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
           Lcd_0()

            LCD_Out(1,1, "Off time is ")  ''Show on LCD
           bytetostr(var_in,txt11)
           bytetostr(var_in2,txt22)
           LCD_Out(2,5,txt11) LCD_Out(2,8,txt22)LCD_Out(2,8,":")
           Delay_mS(500)

         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
           Lcd_0()
'           Lcd_0()
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
            LCD_Out(1,1, "Off time is ")  ''Show on LCD
           bytetostr(var_in,txt11)
           bytetostr(var_in2,txt22)
          LCD_Out(2,5,txt11) LCD_Out(2,8,txt22)LCD_Out(2,8,":")
           Delay_mS(500)
        end if
    var_in_global= var_in2
  wend
 end sub
'**************************************************************************************************

 '**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_On_hour_teben(dim week_day,var_in,var_in2 as Byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
'dim txt11,txt22 as string [2]
   dim  txt_ch2 as string[2]
    while_state_import=1
    oldstate_2=0
   Lcd_0()
'     LCD_Out(1,5,txt_ch2)
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )

      if 1=1 then
         ByteToStr(var_in,txt11)
         ByteToStr(var_in2,txt22)
         ByteToStr(chanel,txt_ch2)
         select case week_day
              case 1

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,2,txt_ch2) LCD_Out(1,1, "Ch:")
                     LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                    LCD_Out(1,2,txt_ch2) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                    LCD_Out(1,2,txt_ch2) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                    LCD_Out(1,4,txt_ch2) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    LCD_Out(1,2,txt_ch2) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                    LCD_Out(1,2,txt_ch2) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7

'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)   LCD_Out(1,11,"(PWM)")
                    LCD_Out(1,2,txt_ch2) LCD_Out(1,1, "Ch:")
                    LCD_Out(1,7,txt11) LCD_Out(1,10,txt22)LCD_Out(1,10,":")
                     LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                     Delay_mS(100)
'                    LCD_Out(1,1, "(  :  )  (PWM)")  ''Show on LCD
                    txt11="  "
'                    LCD_Out(1,5,txt22) LCD_Out(1,7, ":") LCD_Out(1,1,txt11)  LCD_Out(1,11,"(PWM)")
                     LCD_Out(1,7,"   ") LCD_Out(1,10,txt22) LCD_Out(1,10,":")
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select


         end if
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in>=p_max) then
              var_in=p_min
          else
             var_in=var_in+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in<=p_min) then
              var_in=p_max
          else
             var_in=var_in-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
'                   k_set=k_set+1
'                   if k_set=K_set_max then
'                    k_set=1
'                   end if
           Lcd_0()

'            LCD_Out(1,1, "On time is ")  ''Show on LCD
'           bytetostr(var_in,txt11)
'           bytetostr(var_in2,txt22)
'           LCD_Out(2,5,txt11) LCD_Out(2,8,txt22)LCD_Out(2,8,":")
'           Delay_mS(500)

         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
           Lcd_0()
'           Lcd_0()

'            LCD_Out(1,1, "On time is ")  ''Show on LCD
'           bytetostr(var_in,txt11)
'           bytetostr(var_in2,txt22)
'          LCD_Out(2,5,txt11) LCD_Out(2,8,txt22)LCD_Out(2,8,":")
'           Delay_mS(500)
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************
 '* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_PWM_Red_teben(dim mode_1,Pwm_chanel_red,var_in as byte, dim p_max as  byte, dim p_min as  byte,dim pwm1,pwm2,pwm3,pwm4,pwm5,pwm6,pwm7,pwm8,pwm9 as byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    dim  Pwm_1 as byte
'          txt_Pwm1,txt_pwm2,txt_pwm3,txt_pwm4 , txt_pwm5,txt_Pwm6,txt_pwm7 as string [2]
    while_state_import=1
    oldstate_2=0
    Lcd_0()

'     bytetostr(chanel,txt33)

'                    delay_ms(1111)
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import and while_state_import_main )

         ByteToStr(var_in,txt11)
         ByteToStr(pwm1,txt_pwm1)
         ByteToStr(pwm2,txt_pwm2)
         ByteToStr(pwm3,txt_pwm3)
         ByteToStr(pwm4,txt_pwm4)
         ByteToStr(pwm5,txt_pwm5)
         ByteToStr(pwm6,txt_pwm6)
         ByteToStr(pwm7,txt_pwm7)
         ByteToStr(pwm8,txt_pwm8)
         ByteToStr(pwm9,txt_pwm9)
         select case  mode_1
         case 1
             ByteToStr(var_in,txt_pwm1)
         case 2
             ByteToStr(var_in,txt_pwm2)
          case 3
             ByteToStr(var_in,txt_pwm3)
          case 4
             ByteToStr(var_in,txt_pwm4)
         case 5
             ByteToStr(var_in,txt_pwm5)
         case 6
             ByteToStr(var_in,txt_pwm6)
         case 7
             ByteToStr(var_in,txt_pwm7)
         end select
         select case Pwm_chanel_red
              case 1
'              txt_pwm3="0"
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "Red:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)


             case 0
                LCD_Out(1,1, "Red:") LCD_Out(1,7,txt_pwm2) LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)  LCD_Out(1,5,txt11)  ''lcd_out(1,8," -- -- --")
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "-- -- -- -- -- ")  ''Show on LCD
                    Delay_mS(500)
                    txt11="   "
                   LCD_Out(1,1, "Red:")   LCD_Out(1,7,txt_pwm2) LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)  LCD_Out(1,5,txt11) ''
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "-- -- -- -- -- ")  ''Show on LCD
                    Delay_mS(500)
              case 2
                       LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "Grn:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 3
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "Blu:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 4
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "Wht:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 5
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "Yel:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 6
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "DpB:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 7
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-") LCD_Out(1,4,txt_pwm1) LCD_Out(1,1, "UV :")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt_pwm1)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
         end select
         ByteToStr(var_in,txt11)
         ByteToStr(pwm1,txt_pwm1)
         ByteToStr(pwm2,txt_pwm2)
         ByteToStr(pwm3,txt_pwm3)
         ByteToStr(pwm4,txt_pwm4)
         ByteToStr(pwm5,txt_pwm5)
         ByteToStr(pwm6,txt_pwm6)
         ByteToStr(pwm7,txt_pwm7)
         ByteToStr(pwm8,txt_pwm8)
         ByteToStr(pwm9,txt_pwm9)
         select case  mode_1
         case 1
             txt_pwm1="   "
         case 2
             txt_pwm2="   "
          case 3
             txt_pwm3="   "
          case 4
             txt_pwm4="   "
         case 5
             txt_pwm5="   "
         case 6
             txt_pwm6="   "
         case 7
             txt_pwm7="   "
         end select




         select case Pwm_chanel_red


              case 1
'              txt_pwm3="0"

'                    txt_pwm1="  "
                    LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "Red:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
             case 0
                LCD_Out(1,1, "Red:") LCD_Out(1,7,txt_pwm2) LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)  LCD_Out(1,5,txt11)  ''lcd_out(1,8," -- -- --")
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "-- -- -- -- -- ")  ''Show on LCD
                    Delay_mS(500)
                    txt11="   "
                   LCD_Out(1,1, "Red:")   LCD_Out(1,7,txt_pwm2) LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)  LCD_Out(1,5,txt11) ''
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,1, "-- -- -- -- -- ")  ''Show on LCD
                    Delay_mS(500)
              case 2
                     LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "Grn:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "Blu:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "Wht:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 5
                   LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "Yel:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "DpB:")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,13,txt_pwm4)Lcd_Chr(1,13,"-") LCD_Out(1,10,txt_pwm3) Lcd_Chr(1,10,"-") LCD_Out(1,7,txt_pwm2) Lcd_Chr(1,7,"-")  LCD_Out(1,4,txt_pwm1)   LCD_Out(1,1, "UV :")
'                   LCD_Out(1,1, "Red:")  LCD_Out(1,4,txt11)Lcd_Chr(1,7,"-") LCD_Out(1,7,txt_pwm2)LCD_Out(1,10,txt_pwm3) LCD_Out(1,13,txt_pwm4)
'
'                    LCD_Out(1,1,txt22)
                    LCD_Out(2,12,txt_pwm7) Lcd_Chr(2,12,"-")   LCD_Out(2,9,txt_pwm6) Lcd_Chr(2,9,"-")  LCD_Out(2,6,txt_pwm7) Lcd_Chr(2,6,"-")   LCD_Out(2,3,txt_pwm6) Lcd_Chr(2,3,"-")  LCD_Out(2,0,txt_pwm5) ''Show on LCD
                    Delay_mS(100)
         end select

'       end select
    if (Button(PORTD, 5, 0.1, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.1, 1)) then
          if (var_in=p_max) then
              var_in=p_min
          else
             var_in=var_in+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
           PWM_MAKE (var_in,255,Pwm_chanel_red)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.1, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.1, 1)) then
          if (var_in=p_min) then
              var_in=p_max
          else
             var_in=var_in-1

          end if
'
           PWM_MAKE (var_in,255,Pwm_chanel_red)
    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0

           Lcd_0()
           if var_in=1 then  'yes is selected
           k_set=k_set+1
           on_off2=1  ''on mode
'           mode_1=mode_1+1
           if k_set=K_set_max then
                    k_set=1
           end if
                   bytetostr(chanel,txt)
           LCD_Out(1,1, "Chanel") lcd_out(1,8,txt) LCD_Out(1,9, "time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
'           k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
            LCD_Out(1,1, "Time Table is ")  ''Show on LCD
           LCD_Out(2,1, "Completed !!!")
           Delay_mS(500)
           end if
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0

           Lcd_0()
           if var_in=1 then  'yes is selected
           k_set=k_set-2
           on_off2=1  ''on mode
'           chanel=chanel_1+1
           if k_set=K_set_max then
                    k_set=1
           end if
                   bytetostr(chanel,txt)
           LCD_Out(1,1, "Chanel") lcd_out(1,8,txt) LCD_Out(1,9, "time is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
'           k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
            LCD_Out(1,1, "Time Table is ")  ''Show on LCD
           LCD_Out(2,1, "Completed !!!")
           Delay_mS(500)
           end if
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************




'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import_save_exit_teben(dim week_day,var_in as byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    while_state_import=1
    oldstate_2=0
'    Lcd_0()
'     Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
      if var_in=1 then
         select case week_day
              case 1
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "      /No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
         end select
      else
          select case week_day
              case 1
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "Dy:  2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 2
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1   3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 3
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2   4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 4
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3   5 6 7")  ''Show on LCD
                    Delay_mS(100)
              case 5
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4   6 7")  ''Show on LCD
                    Delay_mS(100)
              case 6
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "v1 2 3 4 5   7")  ''Show on LCD
                    Delay_mS(100)
              case 7
                    LCD_Out(1,1, "  Save/No Save  ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6 7")  ''Show on LCD
                    Delay_mS(100)
                    LCD_Out(1,1, "  Save/         ")  ''Show on LCD
                    LCD_Out(2,1, "Pr:1 2 3 4 5 6  ")  ''Show on LCD
                    Delay_mS(100)
              end select
         end if
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in=p_max) then
              var_in=p_min
          else
             var_in=var_in+1


          end if
'          Lcd_0()
'          inttostr(var_in,txt1)
'          LCD_Out(2,9, txt1)  ''Show on LCD
'          LCD_Out(2,5, "Value : ")  ''Show on LCD
'          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in=p_min) then
              var_in=p_max
          else
             var_in=var_in-1

          end if
'

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
           Lcd_0()
           if var_in=1 then
           LCD_Out(1,1, "Save is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
            LCD_Out(1,1, "No Save is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           end if
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
           Lcd_0()
            k_set=k_set+1
            if k_set=K_set_max then
                    k_set=1
            end if
           if var_in=1 then
           LCD_Out(1,1, "Save is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           else
            LCD_Out(1,1, "No Save is ")  ''Show on LCD
           LCD_Out(2,1, "selected")
           Delay_mS(500)
           end if
        end if
    var_in_global= var_in
  wend
 end sub
'**************************************************************************************************
'

'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_import(dim var_in as byte, dim p_max as  byte, dim p_min as  byte )
'    dim oldstate_4,oldstate_3,while_state_import,oldstate_2 as bit
'      Delay_mS(200)
    while_state_import=1
    oldstate_2=0
'    LCD_Out(1,1, txt)  ''Show on LCD
  while  (while_state_import )
    if (Button(PORTD, 5, 0.5, 0)) then    ' Detect logical one up key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 5,0.5, 1)) then
          if (var_in=p_max) then
              var_in=p_min
          else
             var_in=var_in+1
          end if
'          Lcd_0()
          inttostr(var_in,txt1)
          LCD_Out(2,9, txt1)  ''Show on LCD
          LCD_Out(2,5, "Value : ")  ''Show on LCD
          Delay_mS(100)
    end if

           oldstate_3 = 1                      ' Update flag

    if (Button(PORTD, 4, 0.5, 0)) then    ' Detect logical one Down key
            oldstate_3 = 1                      ' Update flag
    end if
    if (oldstate_3 and Button(PIND, 4,0.5, 1)) then
          if (var_in=p_min) then
              var_in=p_max
          else
             var_in=var_in-1
          end if
'          Lcd_0()
          inttostr(var_in,txt1)
          LCD_Out(2,9, txt1)  ''Show on LCD
          LCD_Out(2,5, "Value : ")  ''Show on LCD
          Delay_mS(100)

    end if
    var_in_global=var_in

    if (Button(PIND, 2, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.5, 1)) then
           oldstate_2 = 0
           while_state_import=0
                   k_set=k_set+1
                   if k_set=K_set_max then
                    k_set=1
                   end if
'           Lcd_0()
'           LCD_Out(2,1, "Exit No save !!! ")  ''Show on LCD
'           Delay_mS(100)
         end if

    if (Button(PIND, 6, 0.5, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (while_state_import and oldstate_3 and Button(PIND, 6,0.5, 1)) then
          while_state_import=0
          oldstate_3 = 0
          inttostr(var_in_global,txt1)
                LCD_Out(2,11, txt1)  ''Show on LCD
                LCD_Out(2,5, "Value :")  ''Show on LCD
                Delay_mS(100)
        end if
    var_in_global= var_in
  wend
 end sub

   sub procedure Keypad_set__date_time_import_lcd(dim var_in, p_max , p_min as  integer  )
               dim  text_1  as string[16]
               Lcd_0()
'               LCD_Out(2,1, "month seting0")  ''Show on LCD
               k_set=94
               inttostr(k_set,txt)
                LCD_Out(2,2, txt)  ''Show on LCD
'               Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'               Shamsi_transfer_time()
'               IntToStr(var_in, txt)
               LCD_Out(2,1, text_1)  ''Show on LCD
               LCD_Out(2,8, "seting2")  ''Show on LCD
               Lcd_Chr(2, 3, 94)
               Delay_mS(100)
               Keypad_set__date_time_import(var_in,p_max,p_min)
'               month=var_in_global
'               var_in_global
'               year=year+ 1

               inttostr(var_in_global,txt)
                LCD_Out(2,2, txt)  ''Show on LCD
                Delay_mS(100)
                 'Write TIME    11  : 15  : 00  : 24.  tuesday april  2012
'                 Write_Time(0x11, 0x15, 0x00, 0x24, 0x03,   0x04, 0x12)'
'                  Delay_mS(3500)


                    Lcd_0()


                   inttostr(month,txt)
                   LCD_Out(1,2, "int2str")  ''Show on LCD
                   LCD_Out(1,6,text_1)  ''Show on LCD
                   LCD_Out(2,2, txt)  ''Show on LCD

'                   a = month
'                   year_new = Dec2Bcd(a) ' b equals 34
'                   Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'                   Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
'                   Delay_mS(500)
'               var_in_global
'               year=year+ 1

'              Keypad_set__date_time()
              k_set = 1  ' 1
  end sub

   '**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time_0()
    dim  txt1 as string[4]
    dim while_state_2,oldstate_2,oldstate_3,oldstate_menu as bit
    dim kp,ok,k_set,Ex as  integer
' Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'   Transform_Time()
'   Shamsi_transfer_time()

        oldstate_2 = 0
        oldstate_3 = 0
        oldstate_menu = 0
        while_state_2=1
        k_set=0  ex=0
        Lcd_0()

         Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
         Shamsi_call()
'          jmonth,jday,jyear,week,hours ,minutes,seconds
        while  (while_state_2 )
        LCD_Out(1,1, "while : ")  ''Show on LCD
        Delay_mS(100)
      if (Button(PIND, 2, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.1, 1)) then
           oldstate_2 = 0
           oldstate_menu=1
          k_set=k_set+1
          if k_set=8  then
             k_set=1
          end if
          inttostr(k_set,txt)
                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Position : ")  ''Show on LCD
                Delay_mS(100)
         end if
       if (Button(PIND, 6, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (oldstate_menu and oldstate_3 and Button(PIND, 6,0.1, 1)) then
'          while_state_2=0
          oldstate_3 = 0
'          Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'          Shamsi_transfer_time()
          select case k_set


            case 1
                  text_1="Year"
                  Keypad_set__date_time_import_lcd(year, 100 , 0  )
                  year   =var_in_global


            case 2
'
               text_1="Mounths"
                  Keypad_set__date_time_import_lcd(month,12 , 1  )
                  month   =var_in_global

            case 3

                  text_1="day"
                  Keypad_set__date_time_import_lcd(day,31 , 1  )
                  day   =var_in_global

            case 4

                  text_1="week"
                  Keypad_set__date_time_import_lcd(week,7 , 1  )
                  week   =var_in_global


            case 5

               text_1="hours"
                  Keypad_set__date_time_import_lcd(hours,23 , 0  )
                  hours   =var_in_global
            case 6
                text_1="minutes"
                  Keypad_set__date_time_import_lcd(minutes,59 , 0  )
                  minutes   =var_in_global
            case 7
                text_1="<Exit>"
                  Keypad_set__date_time_import_lcd(ex,1 , 0  )
                  ex =var_in_global
                  if ex=1 then
                            while_state_2=0
                            Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
                            Delay_mS(100)
                  end if
          end select

        end if                      ' Update flag

     wend
 end sub


'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_set__date_time()
    dim  txt1 as string[4]
'    dim while_state_2,oldstate_menu as bit
'    dim oldstate_2,oldstate_3 as bit
    dim kp2,ok2 as  byte
        ex as  integer
'        k_set as byte
     minutes_1, on_off22 as byte
'     dim on_a_1 as integer[7][2][7][2][4]  ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'    dim on_a_1 as byte[7][5][2]
'    dim on_a as byte[7][5][7][4]
' Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'   Transform_Time()
'   Shamsi_transfer_time()
        on_a_1=on_a_0
        oldstate_2 = 0
        week=week_new
'        chanel=1 Pwm_chanel=1 on_off=0
'        hours=0  minutes=0
        oldstate_3 = 0                ex=0
        oldstate_menu = 0
        while_state_2=1
        k_set=0  K_set_max=10             chanel=1
        Lcd_0()

         Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
         Shamsi_transfer_time()
'          week=week_new
           text_1="Year"
           LCD_Out(1,1, "< Year setting >")  ''Show on LCD
            inttostr(year,txt)
            LCD_Out(2,5, txt)
           Keypad_set__date_time_import(year, 100 , 0  )
           year   =var_in_global

'           k_set=1+k_set
'         Shamsi_call()
'          jmonth,jday,jyear,week,hours ,minutes,seconds

        while  (while_state_2 )


'        LCD_Out(1,1, "while : ")  ''Show on LCD
'        Delay_mS(100)
      if (Button(PIND, 2, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.1, 1)) then
           oldstate_2 = 0
           oldstate_menu=1
          k_set=k_set+1
          if k_set>8  then
             k_set=1
          end if
'          inttostr(k_set,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Position : ")  ''Show on LCD
'                Delay_mS(100)
          select case k_set



           case 1
            text_1="Year"
            Lcd_0()
            LCD_Out(1,1, "< Year setting >")  ''Show on LCD
            inttostr(year,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(year, 100 , 0  )
            year   =var_in_global
            case 2   'one and off
            text_1="Mounths"
            Lcd_0()
            LCD_Out(1,1, "< Mounths setting >")  ''Show on LCD
            inttostr(month,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(month,12 , 1  )
            month   =var_in_global
            case 3
            text_1="day"
            Lcd_0()
            LCD_Out(1,1, "< day setting >")  ''Show on LCD
            inttostr(day,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(day,31 , 1  )
            day   =var_in_global
            case 4
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1

             case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(hours,txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(hours,23 , 0  )
             hours   =var_in_global
                      '' k_set=k_set+1

             case 6  'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            text_1="minutes"

            inttostr(minutes,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(minutes,59 , 0  )
            minutes   =var_in_global
'
           case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
'                    while_state_2=0
                    Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
                    Delay_mS(100)

                 end if
            case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select
         end if
       if (Button(PIND, 6, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (oldstate_menu and oldstate_3 and Button(PIND, 6,0.1, 1)) then
'          while_state_2=0
          oldstate_3 = 0
'          Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'          Shamsi_transfer_time()
          select case k_set



           case 1
            text_1="Year"
            Lcd_0()
            LCD_Out(1,1, "< Year setting >")  ''Show on LCD
            inttostr(year,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(year, 100 , 0  )
            year   =var_in_global
            case 2   'one and off
            text_1="Mounths"
            Lcd_0()
            LCD_Out(1,1, "< Mounths setting >")  ''Show on LCD
            inttostr(month,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(month,12 , 1  )
            month   =var_in_global
            case 3
            text_1="day"
            Lcd_0()
            LCD_Out(1,1, "< day setting >")  ''Show on LCD
            inttostr(day,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(day,31 , 1  )
            day   =var_in_global
            case 4
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1

              case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(hours,txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(hours,23 , 0  )
             hours   =var_in_global
                      '' k_set=k_set+1

             case 6  'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            text_1="minutes"

            inttostr(minutes,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(minutes,59 , 0  )
            minutes   =var_in_global
           case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
                    Delay_mS(100)

                 end if
            case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select

'          Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
          Delay_mS(100)
        end if                      ' Update flag
'        LCD_Out(2,1, "End of button ok")  ''Show on LCD

         select case k_set



           case 1
            text_1="Year"
            Lcd_0()
            LCD_Out(1,1, "< Year setting >")  ''Show on LCD
            inttostr(year,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(year, 100 , 0  )
            year   =var_in_global
            case 2   'one and off
            text_1="Mounths"
            Lcd_0()
            LCD_Out(1,1, "< Mounths setting >")  ''Show on LCD
            inttostr(month,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(month,12 , 1  )
            month   =var_in_global
            case 3
            text_1="day"
            Lcd_0()
            LCD_Out(1,1, "< day setting >")  ''Show on LCD
            inttostr(day,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(day,31 , 1  )
            day   =var_in_global
            case 4
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1

             case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(hours,txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(hours,23 , 0  )
             hours   =var_in_global
                      '' k_set=k_set+1

             case 6  'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            text_1="minutes"

            inttostr(minutes,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(minutes,59 , 0  )
            minutes   =var_in_global
           case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
                    Delay_mS(100)

                 end if
            case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select

'           end select
     wend
     LCD_Out(2,1, "End of while ok")  ''Show on LCD
                    delay_ms(500)
 end sub

   '**************************************************************************************************
  sub procedure Keypad_Relay_set__date_time_stack_overflow_teben()
    dim  txt1 as string[4]
'    dim while_state_2,oldstate_menu as bit
'    dim oldstate_2,oldstate_3 as bit
    dim kp2,ok2,ex,ch,md as  byte
'        k_set as byte
     minutes_1, on_off22 as byte
     chanel_conflict as bit
'     dim on_a_1 as integer[7][2][7][2][4]  ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'    dim on_a_1 as byte[7][5][2]
'    dim on_a as byte[7][5][7][4]
' Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'   Transform_Time()
'   Shamsi_transfer_time()
        on_a_1=on_a_0
        oldstate_2 = 0  Yes_no=2
        week=week_new
'        chanel=1 Pwm_chanel=1 on_off=0
'        hours=0  minutes=0
        oldstate_3 = 0                ex=1
        oldstate_menu = 0
        while_state_2=1
        k_set=1  K_set_max=10             chanel=1
        Lcd_0()

         Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
         Shamsi_transfer_time()
'          week=week_new
           week_new=week

            Lcd_0()
'            LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
'            LCD_Out(2,1, "1 2 3 4 5 6 7")  ''Show on LCD
'            Delay_mS(500)
'            if (week_new=1) then
'
'            LCD_Out(1,1, "(On:Off)  (PWM)")  ''Show on LCD
'            LCD_Out(2,1, "  2 3 4 5 6 7")  ''Show on LCD
'               Delay_mS(500)
'
'          end if
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
'             Keypad_set__date_time_import_week_day_teben(week_new,7 , 1  )
'            week_new=var_in_global
'
'         Shamsi_call()
'          jmonth,jday,jyear,week,hours ,minutes,seconds

        while  (while_state_2 )


'        LCD_Out(1,1, "while : ")  ''Show on LCD
'        Delay_mS(100)
      if (Button(PIND, 2, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.1, 1)) then
           oldstate_2 = 0
           oldstate_menu=1
          k_set=k_set+1
          if k_set=10  then
             k_set=1
          end if
'          inttostr(k_set,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Position : ")  ''Show on LCD
'                Delay_mS(100)

         end if
       if (Button(PIND, 6, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (oldstate_menu and oldstate_3 and Button(PIND, 6,0.1, 1)) then
'          while_state_2=0
          oldstate_3 = 0
'          Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'          Shamsi_transfer_time()


'          Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
          Delay_mS(100)
        end if                      ' Update flag
'        LCD_Out(2,1, "End of button ok")  ''Show on LCD

         select case k_set


            case 0   'one and off
             txt="   < enable >"
            Lcd_0()
            LCD_Out(1,1, "   < enable >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],1 , 0  )
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)   ''  k_set=k_set+1
'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)
             case 1
             Keypad_set__date_time_import_week_day_teben(week_new,7 , 1  )
            week_new=var_in_global
            case 2
             on_off2=1   ''On mode
             Lcd_0()
             Keypad_set__date_time_import_On_off_teben(week_new,on_off2,2,1)
             on_off2= var_in_global
             LCD_Out(1,1, "< On and Off >")  ''Show on LCD
              if (on_off2=1) then


                 LCD_Out(2,9, "On setting")  ''Show on LCD
'                 LCD_Out(2,1, "Value: ")  ''Show on LCD
                 Delay_mS(100)
              else
'              var_in=var_in+1
                 LCD_Out(2,9, "Off setting")  ''Show on LCD
'                 LCD_Out(2,1, "Value: ")  ''Show on LCD
                 Delay_mS(100)
              end if
            case 3   'on Mode
              Lcd_0()
              if chanel_conflict=1 then
              on_off2=1
              end if
              if on_off2=1 then
               LCD_Out(1,2, "On setting")  ''Show on LCD

              Delay_mS(400)
              if  chanel >1 then
               on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=on_a_0[week_new-1][chanel-2][Pwm_chanel-1][on_off2][1]
               on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=on_a_0[week_new-1][chanel-2][Pwm_chanel-1][on_off2][2]+1
              end if
              Keypad_set__date_time_import_On_hour_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],23,0)
              for Pwm_chanel=1 to 7
              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=var_in_global
              next Pwm_chanel
'              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=on_off22
              Keypad_set__date_time_import_On_minut_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],59,0)
              for Pwm_chanel=1 to 7
              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=var_in_global
              next Pwm_chanel
'              inttostr(on_a_0 [week_new-1][chanel-1][pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????

              else
                  k_set=k_set+1
              end if
            case 4  'Off mode
'              if on_off2=2  then
              LCD_Out(1,2, "Off setting")  ''Show on LCD
              on_off2=2
              Delay_mS(400)
              Lcd_0()

'              LCD_Out(1,1, "< Hour set >")  ''Show on LCD
'               Keypad_set__date_time_import_On_hour_teben(week_new,1,1,23,0)
'                  Keypad_set__date_time_import_On_hour_teben(week,hours,minutes,23,0)
'                  hours= on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]
'                  minutes=  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]
'                  Keypad_set__date_time_import_On_hour_teben(week_new,hours,minutes,23,0)
'  ##################          hour _off time < Hour on_time check
                   if on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][1]< on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][1] then
                      on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][1]=on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][1]
                   end if
               if (on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][2]< on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][2]) and  (on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][1]= on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][1])then
                  on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][2]= on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][2]
              end if

              Keypad_set__date_time_import_On_hour_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],23,0)
              ''        hour _off time < Hour on_time check
              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=var_in_global
              while  on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][1]< on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][1]
                        LCD_Out(1,1, "Off Hour must be ")
                        LCD_Out(2,1, "bigger from on time")
                         Delay_mS(1400)
                        Keypad_set__date_time_import_On_hour_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],23,0)
                        on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=var_in_global
              Wend
              for Pwm_chanel=1 to 7
              on_off22=var_in_global
              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=on_off22
              next  Pwm_chanel
              Keypad_set__date_time_import_off_minut_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],59,0)
              ''        min _off time < Hour on_time check  and   hour _off time = Hour on_time check
              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=var_in_global
              while  (on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][2]< on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][2]) and  (on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][1]= on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][1])
                        LCD_Out(1,1, "Off miniut  ust be ")
                        LCD_Out(2,1, "bigger from on time")
                         Delay_mS(1400)
'                                      Keypad_set__date_time_import_On_hour_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],23,0)
                        Keypad_set__date_time_import_off_minut_teben(week_new,on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][1],on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2],59,0)
                        on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=var_in_global
              Wend
              for Pwm_chanel=1 to 7

              on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=var_in_global
              next  Pwm_chanel
              inttostr(on_a_0 [week_new-1][chanel-1][pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
              LCD_Out(2,5, txt)          '' k_set=k_set+1
              chanel_conflict=0
              if  chanel >1 then
              for ch=1 to chanel
                 if  chanel <> ch then        ''hour_OFF Chanle == hour_off others
                  if  (on_a_0[week_new-1][chanel-1][Pwm_chanel-1][1][1]= on_a_0[week_new-1][chanel-1][Pwm_chanel-1][0][1]) then
                                                                ''OFF Chanle < off others
                  if on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2] <on_a_0[week_new-1][ch-1][Pwm_chanel-1][on_off2-1][2] then  ''off-chanel<off pervisue

                                                                 ''OFF Chanle > on others
                    if on_a_0[week_new-1][chanel-1][Pwm_chanel-1][on_off2-1][2] >on_a_0[week_new-1][ch-1][Pwm_chanel-1][on_off2-2][2]  then ''off-chanel>On pervisue
                        LCD_Out(1,1, "Two Chanel have conflicted") Delay_mS(1400)
                        chanel_conflict=1
'                        k_set=k_set-2
                        else

'                        LCD_Out(1,1, "More On & Off Mode?")
'                        LCD_Out(2,1, "yes   or  No") Delay_mS(100)
'                        Keypad_set__date_time_import_Yes_No_teben( week_new,chanel,Yes_no, 2,1 )
'                       chanel= var_in_global
                        Delay_mS(100)
                     end if
                   end if
                 end if
                 end if
                next ch
                else     ''chanel == 1
'                        LCD_Out(1,1, "More On & Off Mode?")
'                        LCD_Out(2,1, "yes   or  No") Delay_mS(100)
'                        Keypad_set__date_time_import_Yes_No_teben( week_new,chanel,Yes_no, 2,1 )
'                       chanel= var_in_global
                        Delay_mS(100)
              end if
              if chanel_conflict=0 then
                        LCD_Out(1,1, "More On & Off Mode?")
                        LCD_Out(2,1, "yes   or  No") Delay_mS(100)
                        Keypad_set__date_time_import_Yes_No_teben( week_new,chanel,Yes_no, 2,1 )
'                       chanel= var_in_global
                        Delay_mS(400)
              else
               k_set=k_set-2
              end if
'             end if
            case 5
                on_off2=1 ''On method
                 for ch=1 to chanel
                 for md=1 to 7


                      Keypad_set__date_time_import_PWM_Red_teben(ch,md,on_a_0[week_new-1][ch-1][md-1][on_off2-1][3],99,0,on_a_0[week_new-1][0][md-1][on_off2-1][3],on_a_0[week_new-1][1][md-1][on_off2-1][3],on_a_0[week_new-1][2][md-1][on_off2-1][3],on_a_0[week_new-1][3][md-1][on_off2-1][3],0,0,0,0,0)''on_a_0[week_new-1][4][md-1][on_off2-1][3],0,0,0,0) ''on_a_0[week_new-1][5][md-1][on_off2-1][3],on_a_0[week_new-1][6][md-1][on_off2-1][3],0,0) ''on_a_0[week_new-1][7][md-1][on_off2-1][3],on_a_0[week_new-1][8][md-1][on_off2-1][3]) ''(dim mode_1,Pwm_chanel,var_in as byte, dim p_max as  byte, dim p_min as  byte )
                      on_a_0[week_new-1][ch-1][md-1][on_off2-1][3]=var_in_global


                 next md
                 next ch
                  k_set=k_set+1
            case 22   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1
            case 66   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Chanel set >")  ''Show on LCD
             inttostr(chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(chanel,7 , 1  )
             chanel   =var_in_global   '' k_set=k_set+1
             case 44   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],23 , 0)
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)          '' k_set=k_set+1

             case 55   'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2],59 , 0)
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][2],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)           ''k_set=k_set+1
             case 66   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM Chanel >")  ''Show on LCD
            txt="< PWM Chanel >"
             inttostr(Pwm_chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(Pwm_chanel, 7 , 1  )
             Pwm_chanel   =var_in_global   '' k_set=k_set+1
             case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM precents >")  ''Show on LCD

            txt="< PWM precents >"
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3],txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3], 100 , 0 )
             on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]   =var_in_global   '' k_set=k_set+1
            LCD_Out(2,1, txt)
           case 6   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
'                  Keypad_set__date_time_import(ex,1 , 0 )
                  Keypad_set__date_time_import_save_exit_teben (week_new,ex,1,0)
                  ex= var_in_global
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
'                     on_a_0=on_a_0
                    inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
                    eeprom_save_ext_twi()
                  else
                  while_state_2=0
                  on_a_0 =on_a_1
                  eeprom_save_ext_twi()
'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if
            case 9   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select
     wend
     LCD_Out(2,1, "End of while ok")  ''Show on LCD
                    delay_ms(500)
 end sub

   '**************************************************************************************************
'* Keypad PROGRAM


'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_Relay_set__date_time_stack_overflow()
    dim  txt1 as string[4]
'    dim while_state_2,oldstate_menu as bit
'    dim oldstate_2,oldstate_3 as bit
    dim kp2,ok2,ex as  byte
'        k_set as byte
     minutes_1, on_off22 as byte
'     dim on_a_1 as integer[7][2][7][2][4]  ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'    dim on_a_1 as byte[7][5][2]
'    dim on_a as byte[7][5][7][4]
' Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'   Transform_Time()
'   Shamsi_transfer_time()
        on_a_0=on_a_0
        oldstate_2 = 0
        week=week_new
'        chanel=1 Pwm_chanel=1 on_off=0
'        hours=0  minutes=0
        oldstate_3 = 0                ex=0
        oldstate_menu = 0
        while_state_2=1
        k_set=0  K_set_max=10             chanel=1
        Lcd_0()

         Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
         Shamsi_transfer_time()
          week=week_new
            txt=" < On and Off >"
            Lcd_0()
            LCD_Out(1,1, "< On and Off >")  ''Show on LCD
            if (on_off2=1) then


               LCD_Out(2,9, "On setting")  ''Show on LCD
               LCD_Out(2,1, "Value: ")  ''Show on LCD
               Delay_mS(100)
          else
'              var_in=var_in+1
              LCD_Out(2,9, "Off setting")  ''Show on LCD
              LCD_Out(2,1, "Value: ")  ''Show on LCD
              Delay_mS(100)
          end if
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import_on_off(on_off2,2 , 1  )
            on_off2=var_in_global
'            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)

'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)

            k_set=1+k_set
'         Shamsi_call()
'          jmonth,jday,jyear,week,hours ,minutes,seconds

        while  (while_state_2 )


'        LCD_Out(1,1, "while : ")  ''Show on LCD
'        Delay_mS(100)
      if (Button(PIND, 2, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.1, 1)) then
           oldstate_2 = 0
           oldstate_menu=1
          k_set=k_set+1
          if k_set=10  then
             k_set=1
          end if
'          inttostr(k_set,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Position : ")  ''Show on LCD
'                Delay_mS(100)
          select case k_set


            case 0   'one and off
             txt="   < enable >"
            Lcd_0()
            LCD_Out(1,1, "   < enable >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],1 , 0  )
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)   ''  k_set=k_set+1
'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)
           case 1
            txt=" < On and Off >"
            Lcd_0()
            LCD_Out(1,1, "< On and Off >")  ''Show on LCD
              if (on_off2=1) then


               LCD_Out(2,9, "On setting")  ''Show on LCD
               LCD_Out(2,1, "Value: ")  ''Show on LCD
               Delay_mS(100)
          else
'              var_in=var_in+1
              LCD_Out(2,9, "Off setting")  ''Show on LCD
              LCD_Out(2,1, "Value: ")  ''Show on LCD
              Delay_mS(100)
          end if
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import_on_off(on_off2,2 , 1  )
            on_off2=var_in_global
            case 2   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1
            case 3   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Chanel set >")  ''Show on LCD
             inttostr(chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(chanel,7 , 1  )
             chanel   =var_in_global   '' k_set=k_set+1
             case 4   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],23 , 0)
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)          '' k_set=k_set+1

             case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2],59 , 0)
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][2],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)           ''k_set=k_set+1
             case 6   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM Chanel >")  ''Show on LCD
            txt="< PWM Chanel >"
             inttostr(Pwm_chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(Pwm_chanel, 7 , 1  )
             Pwm_chanel   =var_in_global   '' k_set=k_set+1
             case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM precents >")  ''Show on LCD

            txt="< PWM precents >"
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3],txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3], 100 , 0 )
             on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]   =var_in_global   '' k_set=k_set+1
            LCD_Out(2,1, txt)
           case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
                    inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
                    on_a_0=on_a_0
                                        eeprom_save_ext_twi()

'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if
            case 9   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select
         end if
       if (Button(PIND, 6, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (oldstate_menu and oldstate_3 and Button(PIND, 6,0.1, 1)) then
'          while_state_2=0
          oldstate_3 = 0
'          Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'          Shamsi_transfer_time()
          select case k_set


            case 0   'one and off

                  text_1="On and Off"
'                  Delay_mS(100)
                  Keypad_set__date_time_import_lcd(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],1 , 0  )
                  on_off22=var_in_global
                  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
                  inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                  LCD_Out(2,11, txt)
                  inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                  LCD_Out(2,1, txt)
'                  Delay_mS(100)
            case 1
                   txt=" < On and Off >"
            Lcd_0()
            LCD_Out(1,1, "< On and Off >")  ''Show on LCD
              if (on_off2=1) then


               LCD_Out(2,9, "On setting")  ''Show on LCD
               LCD_Out(2,1, "Value: ")  ''Show on LCD
               Delay_mS(100)
          else
'              var_in=var_in+1
              LCD_Out(2,9, "Off setting")  ''Show on LCD
              LCD_Out(2,1, "Value: ")  ''Show on LCD
              Delay_mS(100)
          end if
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import_on_off(on_off2,2 , 1  )
            on_off2=var_in_global
            case 2

                  text_1="week"
                  Keypad_set__date_time_import(week,7 , 1  )
                  week   =var_in_global


            case 3
                  text_1="Chanel"
'                  Keypad_set__date_time_import_lcd(chanel, 5 , 1  )
'                  chanel   =var_in_global

            case 4


               text_1="hours"
                  Keypad_set__date_time_import_lcd(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],23 , 0)
                  hours   =var_in_global
                  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=hours
'                  on_a[week][chanel][0]=hours
            case 5
                text_1="minutes"
                  Keypad_set__date_time_import_lcd(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2] ,59 , 0  )
'                  delay_ms(500)
'                   on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]  =var_in_global
                    minutes_1 =var_in_global
                  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=minutes_1
'                  on_a[week][chanel][1]=minutes

'
           case 6   'pwm chnael color
                  text_1="PWM Chanel color"
                  Keypad_set__date_time_import_lcd(Pwm_chanel, 7 , 1  )
                  Pwm_chanel   =var_in_global

'                  on_a[week-1][chanel-1][on_off][Pwm_chanel-1][2]=Pwm_chanel
'
           case 7   'pwm Precent
                  text_1="PWM Precent"
                  Keypad_set__date_time_import_lcd(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3], 100 , 0  )
                  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]   =var_in_global
'                  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]=Pwm_Percent
'

            case 8  'Save key
                 text_1="<Save> and Exit"
                  Keypad_set__date_time_import_lcd(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                      on_a_0=on_a_0
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
                    inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
                                        eeprom_save_ext_twi()

'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if



'               text_1="off"
'                  Keypad_set__date_time_import_lcd(month,12 , 1  )
'                  month   =var_in_global
'

            case 9  'exit key
                 text_1="<Exit> No save"
                  Keypad_set__date_time_import_lcd(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if



          end select

'          Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
          Delay_mS(100)
        end if                      ' Update flag
'        LCD_Out(2,1, "End of button ok")  ''Show on LCD

         select case k_set


            case 0   'one and off
             txt="   < enable >"
            Lcd_0()
            LCD_Out(1,1, "   < enable >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0],1 , 0  )
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)   ''  k_set=k_set+1
'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)
            case 1
             txt=" < On and Off >"
            Lcd_0()
            LCD_Out(1,1, "< On and Off >")  ''Show on LCD
              if (on_off2=1) then


               LCD_Out(2,9, "On setting")  ''Show on LCD
               LCD_Out(2,1, "Value: ")  ''Show on LCD
               Delay_mS(100)
          else
'              var_in=var_in+1
              LCD_Out(2,9, "Off setting")  ''Show on LCD
              LCD_Out(2,1, "Value: ")  ''Show on LCD
              Delay_mS(100)
          end if
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import_on_off(on_off2,2 , 1 )
            on_off2=var_in_global
            case 2   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1
            case 3   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Chanel set >")  ''Show on LCD
             inttostr(chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(chanel,7 , 1  )
             chanel   =var_in_global   '' k_set=k_set+1
             case 4   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],23 , 0)
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)          '' k_set=k_set+1

             case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2],59 , 0)
            on_off22=var_in_global
            on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][2],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)           ''k_set=k_set+1
             case 6   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM Chanel >")  ''Show on LCD
            txt="< PWM Chanel >"
             inttostr(Pwm_chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(Pwm_chanel, 7 , 1  )
             Pwm_chanel   =var_in_global   '' k_set=k_set+1
             case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM precents >")  ''Show on LCD

            txt="< PWM precents >"
            inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3],txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3], 100 , 0 )
             on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]   =var_in_global   '' k_set=k_set+1
            LCD_Out(2,1, txt)
           case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
                     on_a_0=on_a_0
                    inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
                                        eeprom_save_ext_twi()

'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if
            case 9   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select
     wend
     LCD_Out(2,1, "End of while ok")  ''Show on LCD
                    delay_ms(500)
 end sub

   '**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_Relay_set__date_time(dim week_new,chanel,Pwm_chanel,on_off2 as byte)
    dim  txt1 as string[4]
'    dim while_state_2,oldstate_menu as bit
'    dim oldstate_2,oldstate_3 as bit
    dim kp2,ok2,ex as  byte
'        k_set as byte
     minutes_1, on_off22 as byte
     dim on_a_1 as integer[4]  ''[week-1][chanel-1][pwm_chanel-1][on_off2-1][0]
'    dim on_a_1 as byte[7][5][2]
'    dim on_a as byte[7][5][7][4]
' Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'   Transform_Time()
'   Shamsi_transfer_time()
        on_a_1[0]=on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0]
        on_a_1[1]=on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]
        on_a_1[2]=on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]
        on_a_1[3]=on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]
        oldstate_2 = 0
'        week=2   chanel=1 Pwm_chanel=1  on_off=0  chanel=1
        hours=0  minutes=0
        oldstate_3 = 0                ex=0
        oldstate_menu = 0
        while_state_2=1
        k_set=0  K_set_max=10
        Lcd_0()

         Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
         week=week_new
         Shamsi_transfer_time()

         txt="   < enable >"
            Lcd_0()
            LCD_Out(1,1, "   < enable >")  ''Show on LCD
            inttostr(on_a_1[0],txt)

           LCD_Out(2,9, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[0],1 , 0  )
            on_off22=var_in_global
            on_a_1[0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)

'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)

            k_set=1+k_set
'         Shamsi_call()
'          jmonth,jday,jyear,week,hours ,minutes,seconds

        while  (while_state_2 )


'        LCD_Out(1,1, "while : ")  ''Show on LCD
'        Delay_mS(100)
      if (Button(PIND, 2, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_2 = 1                      ' Update flag
        end if
        if (oldstate_2 and Button(PIND, 2,0.1, 1)) then
           oldstate_2 = 0
           oldstate_menu=1
          k_set=k_set+1
          if k_set=10  then
             k_set=1
          end if
'          inttostr(k_set,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Position : ")  ''Show on LCD
'                Delay_mS(100)
          select case k_set


            case 1   'one and off
             txt="   < enable >"
            Lcd_0()
            LCD_Out(1,1, "   < enable >")  ''Show on LCD
            inttostr(on_a_1[0],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[0],1 , 0  )
            on_off22=var_in_global
            on_a_1[0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_1 [0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)   ''  k_set=k_set+1
'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)
            case 2   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1
            case 3   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Chanel set >")  ''Show on LCD
             inttostr(chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(chanel,7 , 1  )
             chanel   =var_in_global   '' k_set=k_set+1
             case 4   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(on_a_1[1],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[1],23 , 0)
            on_off22=var_in_global
            on_a_1[1]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)          '' k_set=k_set+1

             case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            inttostr(on_a_1[2],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[2],59 , 0)
            on_off22=var_in_global
            on_a_1[2]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_1 [2],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)           ''k_set=k_set+1
             case 6   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM Chanel >")  ''Show on LCD
            txt="< PWM Chanel >"
             inttostr(Pwm_chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(Pwm_chanel, 7 , 1  )
             Pwm_chanel   =var_in_global   '' k_set=k_set+1
             case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM precents >")  ''Show on LCD

            txt="< PWM precents >"
            inttostr(on_a_1[3],txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(on_a_1[3], 100 , 0 )
             on_a_1[3]   =var_in_global   '' k_set=k_set+1
            LCD_Out(2,1, txt)
           case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
                    inttostr(on_a_1 [0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
'                    on_a_0=on_a_1
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0] =on_a_1[0]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]  =on_a_1[1]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]  =on_a_1[2]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3] =on_a_1[3]
                                        eeprom_save_ext_twi()

'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if
            case 9   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select
         end if
       if (Button(PIND, 6, 0.1, 0)<> 0) then    ' Detect logical one setting key
            oldstate_3 = 1                      ' Update flag
        end if
        if (oldstate_menu and oldstate_3 and Button(PIND, 6,0.1, 1)) then
'          while_state_2=0
          oldstate_3 = 0
'          Read_Time(@hours, @minutes, @seconds, @day, @week, @month, @year)
'          Shamsi_transfer_time()
          select case k_set


            case 1   'one and off

                  text_1="On and Off"
'                  Delay_mS(100)
                  Keypad_set__date_time_import_lcd(on_a_1[0],1 , 0  )
                  on_off22=var_in_global
                  on_a_1[0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
                  inttostr(on_a_1 [0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                  LCD_Out(2,11, txt)
                  inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                  LCD_Out(2,1, txt)
'                  Delay_mS(100)

            case 2

                  text_1="week"
                  Keypad_set__date_time_import(week,7 , 1  )
                  week   =var_in_global


            case 3
                  text_1="Chanel"
'                  Keypad_set__date_time_import_lcd(chanel, 5 , 1  )
'                  chanel   =var_in_global

            case 4


               text_1="hours"
                  Keypad_set__date_time_import_lcd(on_a_1[1],23 , 0)
                  hours   =var_in_global
                  on_a_1[1]=hours
'                  on_a[week][chanel][0]=hours
            case 5
                text_1="minutes"
                  Keypad_set__date_time_import_lcd(on_a_1[2] ,59 , 0  )
'                  delay_ms(500)
'                   on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]  =var_in_global
                    minutes_1 =var_in_global
                  on_a_1[2]=minutes_1
'                  on_a[week][chanel][1]=minutes

'
           case 6   'pwm chnael color
                  text_1="PWM Chanel color"
                  Keypad_set__date_time_import_lcd(Pwm_chanel, 7 , 1  )
                  Pwm_chanel   =var_in_global

'                  on_a[week-1][chanel-1][on_off][Pwm_chanel-1][2]=Pwm_chanel
'
           case 7   'pwm Precent
                  text_1="PWM Precent"
                  Keypad_set__date_time_import_lcd(on_a_1[3], 100 , 0  )
                  on_a_1[3]   =var_in_global
'                  on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3]=Pwm_Percent
'

            case 8  'Save key
                 text_1="<Save> and Exit"
                  Keypad_set__date_time_import_lcd(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                      on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0] =on_a_1[0]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]  =on_a_1[1]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]  =on_a_1[2]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3] =on_a_1[3]
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
                    inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
                                        eeprom_save_ext_twi()

'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if



'               text_1="off"
'                  Keypad_set__date_time_import_lcd(month,12 , 1  )
'                  month   =var_in_global
'

            case 9  'exit key
                 text_1="<Exit> No save"
                  Keypad_set__date_time_import_lcd(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if



          end select

'          Write_Time(Dec2Bcd(hours), Dec2Bcd(minutes), Dec2Bcd(seconds), Dec2Bcd(day), Dec2Bcd(week),   Dec2Bcd(month),  Dec2Bcd(year))'
          Delay_mS(100)
        end if                      ' Update flag
'        LCD_Out(2,1, "End of button ok")  ''Show on LCD

         select case k_set


            case 1   'one and off
             txt="   < enable >"
            Lcd_0()
            LCD_Out(1,1, "   < enable >")  ''Show on LCD
            inttostr(on_a_1[0],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[0],1 , 0  )
            on_off22=var_in_global
            on_a_1[0]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_1[0],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)   ''  k_set=k_set+1
'           inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
'                  LCD_Out(2,1, txt)
'            LCD_Out(2,1, txt)
            case 2   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Week setting >")  ''Show on LCD
            inttostr(week,txt)
            LCD_Out(2,5, txt)
            Keypad_set__date_time_import(week,7 , 1  )
            week   =var_in_global  ''k_set=k_set+1
            case 3   'one and off
            Lcd_0()
            LCD_Out(1,1, "< Chanel set >")  ''Show on LCD
             inttostr(chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(chanel,7 , 1  )
             chanel   =var_in_global   '' k_set=k_set+1
             case 4   'one and off
            Lcd_0()LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            txt="< Hour set >"
            Lcd_0()
            LCD_Out(1,1, "< Hour set >")  ''Show on LCD
            inttostr(on_a_1[1],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[1],23 , 0)
            on_off22=var_in_global
            on_a_1[1]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_0 [week-1][chanel-1][Pwm_chanel-1][on_off2-1][1],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)          '' k_set=k_set+1

             case 5   'one and off
            Lcd_0()LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            txt="< Minutes set >"
            Lcd_0()
            LCD_Out(1,1, "< Minutes set >")  ''Show on LCD
            inttostr(on_a_1[2],txt)
            LCD_Out(2,5, txt)
'            Keypad_set__date_time_import_lcd(on_off,1 , 0  )
             Keypad_set__date_time_import(on_a_1[2],59 , 0)
            on_off22=var_in_global
            on_a_1[2]=on_off22
'                  Lcd_0()
'                  LCD_Out(1,11, "ssssssssssss") Delay_mS(1100)
           inttostr(on_a_1 [2],txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
           LCD_Out(2,5, txt)           ''k_set=k_set+1
             case 6   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM Chanel >")  ''Show on LCD
            txt="< PWM Chanel >"
             inttostr(Pwm_chanel,txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(Pwm_chanel, 7 , 1  )
             Pwm_chanel   =var_in_global   '' k_set=k_set+1
             case 7   'one and off
            Lcd_0()LCD_Out(1,1, "< PWM precents >")  ''Show on LCD

            txt="< PWM precents >"
            inttostr(on_a_1[3],txt)
             LCD_Out(2,5, txt)
             Keypad_set__date_time_import(on_a_1[3], 100 , 0 )
             on_a_1[3]   =var_in_global   '' k_set=k_set+1
            LCD_Out(2,1, txt)
           case 8   'one and off
            Lcd_0()LCD_Out(1,1, "< Save & Exit >")  ''Show on LCD
             txt="<Save> and Exit"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                    Lcd_0()
'                     LCD_Out(2,1, "on_a_0=on_a ")  ''Show on LCD
'                     delay_ms(500)
'                     on_a_0=on_a
                     LCD_Out(2,1, "on_a_0=on_a  2")  ''Show on LCD
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][0] =on_a_1[0]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][1]  =on_a_1[1]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][2]  =on_a_1[2]
                     on_a_0[week-1][chanel-1][Pwm_chanel-1][on_off2-1][3] =on_a_1[3]
                    inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)

                    LCD_Out(1,11, txt)
                    inttostr(chanel,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                    LCD_Out(2,1, txt)
                    LCD_Out(2,1, "End of save")  ''Show on LCD
'                     eeprom_save()
                    'eeprom_save_ext()
                                        eeprom_save_ext_twi()

'                     if  (EEPROM_Read(0x00)=122)   then
'                         Lcd_Out(1,1,"EEprom  writed befor" )
'                         IntToStr(EEPROM_Read(0x00), txt)
'                        Lcd_Out(1,1,"EEprommmmmmmmmm" )
'                         Lcd_Out(2,1,txt )
'                    else
'                        EEPROM_Write(0x00 ,122 )
'                          EEPROM_Write(0x00 ,122 )
'                         Lcd_Out(1,1,"not writed" )
'
'                    end if
'                    delay_ms(500)

                 end if
            case 9   'one and off
            Lcd_0()LCD_Out(1,1, "< No save& Exit >")  ''Show on LCD
            txt="< No save& Exit >"
                  Keypad_set__date_time_import(ex,1 , 0 )
                  ex   =var_in_global
                 if ex=1 then
                    while_state_2=0
                 end if

           end select
     wend
     LCD_Out(2,1, "End of while ok")  ''Show on LCD
                    delay_ms(500)
 end sub

 sub procedure Lcd_Keypad_3(dim q_1,q_2,q_3,ch as integer)
'                  txt1 = "Cal Rel Pwm <Ex>"
                   Lcd_0()
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, q_1, ch)
                 Lcd_Chr(2, q_2, ch)
                 Lcd_Chr(2, q_3, ch)
                 Delay_mS(200)
 end sub
 sub procedure Lcd_Keypad_4(dim q_1,q_2,q_3,ch as integer)
'                  txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, q_1, ch)
                 Lcd_Chr(2, q_2, ch)
                 Lcd_Chr(2, q_3, ch)
                 Delay_mS(200)
 end sub
 sub procedure Keypad_Relay_set__date_time_On_off()
   dim kp1, ok1  as integer
   Lcd_0()
   txt1 = " <<  On Enable >>"
   inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)
   LCD_Out(2,6, txt)
  Lcd_Keypad_3(3,2,4,94)
'  Lcd_Out(1,1,txt1)
'  Lcd_Chr(2, 3, 94)
'  Lcd_Chr(2, 2, 94)
'  Lcd_Chr(2, 4, 94)
'  Delay_ms(500)                    ' delay 2 sec
  kp1=0
'  ok1=0


     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (PIND0_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state=0
       while_satate_in_1=0
        kp1=1
       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1,txt1)
      Delay_mS(500)
'       Lcd_0()
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
'       Delay_mS(500)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
            Lcd_0()
            txt1 = " On  Off  <Exit>"
           if (kp1=0) then  '<Exit mode>
              kp1=8
'              txt1 = "On Off <Exit>"
               Lcd_0()
               txt1 = " <<  Exit & Not save >>" LCD_Out(1,1, txt)
               inttostr(on_a_0 [week-1][chanel-1][pwm_chanel-1][on_off2-1][0],txt)
               LCD_Out(2,6, txt)
'               Lcd_Keypad_3(13,14,15,94)
'              Lcd_Out(1,1,txt1)
'              Lcd_Chr(2, 13, 94)
'              Lcd_Chr(2, 14, 94)
'              Lcd_Chr(2, 15, 94)
            else
             kp1=kp1-1
            if (kp1=0) then            ' ON Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(2,3,4,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 3, 94)
'             Lcd_Chr(2, 2, 94)
'             Lcd_Chr(2, 4, 94)
            end if

            if (kp1=1) then            ' Off  Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(6,7,8,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            end if

      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
           Lcd_0()
           txt1 = " On  Off  <Exit>"
            if (kp1=2) then
              kp1=0
'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(2,3,4,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 3, 94)
'             Lcd_Chr(2, 2, 94)
'             Lcd_Chr(2, 4, 94)
            else
              kp1=kp1+1
              if (kp1=2) then            ' ON Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(13,14,15,94)
'              Lcd_Out(1,1,txt1)
'              Lcd_Chr(2, 13, 94)
'              Lcd_Chr(2, 14, 94)
'              Lcd_Chr(2, 15, 94)
              end if

              if (kp1=1) then            ' Off  Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(6,7,8,94)
'               Lcd_Out(1,1,txt1)
'               Lcd_Chr(2, 6, 94)
'               Lcd_Chr(2, 7, 94)
'               Lcd_Chr(2, 8, 94)
              end if
            end if

'      Delay_mS(500)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
'      if (kp1=0) then
'        LCD_Out(1,1, "Setting is actived")  ''Show on LCD
'      else
'        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
'      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
'      Delay_mS(500)
      end if


   wend

'


          select case kp1
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp1 = 0  ' 1               ' ??? ????? ???? ? ?????? ????? ? ????

              txt1 = " On  Off  <Exit>"
'              Keypad_Relay_set__date_time()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Case  Ok is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 1

'                Shamsi_call()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
              kp1 = 1  ' 1               ' ????? ???? ? ????? ???

          end select


 end sub
 '**************************************************************************************************


 sub procedure Keypad_Relay_set__date_time_On_and_off()
   dim kp1, ok1  as integer
   Lcd_0()
   txt1 = " On  Off  <Exit>"
  Lcd_Keypad_3(3,2,4,94)
'  Lcd_Out(1,1,txt1)
'  Lcd_Chr(2, 3, 94)
'  Lcd_Chr(2, 2, 94)
'  Lcd_Chr(2, 4, 94)
'  Delay_ms(500)                    ' delay 2 sec
  kp1=0
'  ok1=0


     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (PIND0_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state=0
       while_satate_in_1=0
        kp1=1
       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1,txt1)
      Delay_mS(500)
'       Lcd_0()
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
'       Delay_mS(500)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
            Lcd_0()
            txt1 = " On  Off  <Exit>"
           if (kp1=0) then  '<Exit mode>
              kp1=2
'              txt1 = "On Off <Exit>"
               Lcd_Keypad_3(13,14,15,94)
'              Lcd_Out(1,1,txt1)
'              Lcd_Chr(2, 13, 94)
'              Lcd_Chr(2, 14, 94)
'              Lcd_Chr(2, 15, 94)
            else
             kp1=kp1-1
            if (kp1=0) then            ' ON Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(2,3,4,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 3, 94)
'             Lcd_Chr(2, 2, 94)
'             Lcd_Chr(2, 4, 94)
            end if

            if (kp1=1) then            ' Off  Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(6,7,8,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            end if

      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
           Lcd_0()
           txt1 = " On  Off  <Exit>"
            if (kp1=2) then
              kp1=0
'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(2,3,4,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 3, 94)
'             Lcd_Chr(2, 2, 94)
'             Lcd_Chr(2, 4, 94)
            else
              kp1=kp1+1
              if (kp1=2) then            ' ON Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(13,14,15,94)
'              Lcd_Out(1,1,txt1)
'              Lcd_Chr(2, 13, 94)
'              Lcd_Chr(2, 14, 94)
'              Lcd_Chr(2, 15, 94)
              end if

              if (kp1=1) then            ' Off  Mode

'              txt1 = "Setting   <Exit>"
               Lcd_Keypad_3(6,7,8,94)
'               Lcd_Out(1,1,txt1)
'               Lcd_Chr(2, 6, 94)
'               Lcd_Chr(2, 7, 94)
'               Lcd_Chr(2, 8, 94)
              end if
            end if

'      Delay_mS(500)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
'      if (kp1=0) then
'        LCD_Out(1,1, "Setting is actived")  ''Show on LCD
'      else
'        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
'      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
'      Delay_mS(500)
      end if


   wend

'


          select case kp1
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp1 = 0  ' 1               ' ??? ????? ???? ? ?????? ????? ? ????
              on_off=kp1+1
              txt1 = " On  Off  <Exit>"

               ''Keypad_Relay_set__date_time(week_new,chanel,Pwm_chanel,on_off) ''Keypad_Relay_set__date_time(dim week,chanel,Pwm_chanel,on_off2 as byte)
                           Keypad_Relay_set__date_time_stack_overflow()
'
'              Keypad_Relay_set__date_time()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Case  Ok is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 1

'                Shamsi_call()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
              kp1 = 1  ' 1               ' ????? ???? ? ????? ???

          end select


 end sub



 '**************************************************************************************************


 sub procedure Keypad_Relay_set_Pwm_chanel()
   dim kp1, ok1  as integer
   Lcd_0()
   txt1 = "<red  grn  blue>"
    txt ="<red  grn  blue>"
   txt2 ="<yelw whit ulbl>"
   txt3="<Uv     <Exit> >"
   WDTCR = 0x00 ''whatchdog offing
'  Lcd_Keypad_3(3,2,4,94)
  Lcd_Out(1,1,txt1)
  Lcd_Chr(2, 3, 94)
  Lcd_Chr(2, 2, 94)
  Lcd_Chr(2, 4, 94)
  Delay_ms(500)                    ' delay 2 sec
  kp1=0   '' week_new=week
'  ok1=0


     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (PIND0_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state=0
       while_satate_in_1=0
        kp1=1
       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1,txt1)
      Delay_mS(500)
       Lcd_0()
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
'       Delay_mS(500)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
            Lcd_0()
'            lcd_key_mode_day(kp1,7,0)
'Lcd_0()
'   txt = "<mode1  mode2 mode3 >"
'   txt2 = "<mode4  mode5 mode6>"
'   txt3=" mode7 <Exit>   >"
            txt1 =txt
           if (kp1=0) then  '<Exit mode>
              kp1=7
              txt1 = txt3
'               Lcd_Keypad_3(13,14,15,94)
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 13, 94)
              Lcd_Chr(2, 14, 94)
              Lcd_Chr(2, 15, 94)
            else

             kp1=kp1-1

            if (kp1=0) then            ' ON Mode

              txt1 = txt
'               Lcd_Keypad_3(2,3,4,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 8, 94)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 10, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 15, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 15, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 7, 94)
             Lcd_Chr(2, 8, 94)
            end if


            end if

      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
           Lcd_0()
'           Lcd_0()
'           txt = "< mode1  mode2 mode3 >"
'           txt2 = "< mode4  mode5 mode6>"
'           txt3=" mode7 <Exit>   >"
            txt1 =txt
           if (kp1=7) then  '<Exit mode>
              kp1=0
              txt1 = txt
'               Lcd_Keypad_3(13,14,15,94)
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 4, 94)
              Lcd_Chr(2, 2, 94)
              Lcd_Chr(2, 3, 94)
            else

             kp1=kp1+1

            if (kp1=0) then            ' ON Mode

              txt1 = txt
'               Lcd_Keypad_3(2,3,4,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 8, 94)
             Lcd_Chr(2, 9, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 13, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 14, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
            end if


            end if

'      Delay_mS(500)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
'      if (kp1=0) then
'        LCD_Out(1,1, "Setting is actived")  ''Show on LCD
'      else
'        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
'      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
'      Delay_mS(500)
      end if


   wend

'


          select case kp1
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp1 = 0  ' 1               ' ??? ????? ???? ? ?????? ????? ? ????
'              chanel=kp1
'              txt1 = " On  Off  <Exit>"
               Pwm_chanel=kp1+1
               Keypad_Relay_set__date_time_On_and_off()
'              Keypad_Relay_set__date_time(2,chanel,1,1) ''Keypad_Relay_set__date_time(dim week,chanel,Pwm_chanel,on_off2 as byte)
'              Keypad_Relay_set__date_time_stack_overflow()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Case  Ok is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 1

'                Shamsi_call()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
              kp1 = 1  ' 1               ' ????? ???? ? ????? ???

          end select


 end sub

 '**************************************************************************************************

 '**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_Blinking(dim kp1,Kp_max,Kp_min,sate as integer)
 oldstate_up=0  oldstate=0 oldstate_down=0 oldstate_ok=0 while_satat=1
  if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate = 1
      Lcd_0()
      txt1 = "<Exit is selected>"
       Lcd_Out(1,1,txt1)
      Delay_mS(400)                      ' Update flag
   end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state_blinking=0
       while_satat=0
       while_satate_in_1=0
       kp=3
     end if
      if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
      Delay_mS(200)
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
        while_state_blinking=0
          Lcd_Cmd(_LCD_CLEAR)               ' Clear display
            Lcd_Cmd(_LCD_CURSOR_OFF)          ' Cursor off
           if (kp=Kp_min) then
              kp=Kp_Max
              txt1 = "Cal Rel Pwm <Ex>"
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 13, 94)
              Lcd_Chr(2, 14, 94)
              Lcd_Chr(2, 15, 94)
            else
            kp=kp-1
              if kp =0 then

                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 1, 94)
                 Lcd_Chr(2, 2, 94)
                 Lcd_Chr(2, 3, 94)
              end if
              if kp =1 then

                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 5, 94)
                 Lcd_Chr(2, 6, 94)
                 Lcd_Chr(2, 7, 94)
              end if
              if kp =2 then

                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 9, 94)
                 Lcd_Chr(2, 10, 94)
                 Lcd_Chr(2, 11, 94)
              end if
            end if
    end if
     if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical UP setting key
      oldstate_up = 1                      ' Update flag
      Delay_mS(200)

      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
            while_state_blinking=0
            Lcd_0()
           if (kp=Kp_Max) then
              kp=Kp_min
                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 1, 94)
                 Lcd_Chr(2, 2, 94)
                 Lcd_Chr(2, 3, 94)
            else
            kp=kp+1
              if kp =3 then
                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 13, 94)
                 Lcd_Chr(2, 14, 94)
                 Lcd_Chr(2, 15, 94)
              end if
              if kp =1 then
                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 5, 94)
                 Lcd_Chr(2, 6, 94)
                 Lcd_Chr(2, 7, 94)
              end if
              if kp =2 then
                 txt1 = "Cal Rel Pwm <Ex>"
                 Lcd_Out(1,1,txt1)
                 Lcd_Chr(2, 9, 94)
                 Lcd_Chr(2, 10, 94)
                 Lcd_Chr(2, 11, 94)
              end if

            end if


      end if
      if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
      Lcd_0()
      txt1 = "ok"
       Lcd_Out(1,1,txt1)
      Delay_mS(100)
    end if
     if ((oldstate_ok)  and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      oldstate_ok=0
       while_state_blinking=0
      while_satate_in_1=0
      while_satat=0
     end if
'     txt1 = "enterrrrr"
'     Lcd_Out(1,1,txt1)
 end sub



sub procedure lcd_key_mode_day(dim kp1,kp1_max,call_0 as byte  )
   dim txt3 as string[11]
   Lcd_0()
   txt = "<mode1 mode2 mode3>"
   txt2 = "<mode4 mode5 mode6>"
   txt3="< mode7 <Exit> >"
            txt1 =txt
           if (kp1=0) then  '<Exit mode>
              kp1=kp1_max
              txt1 = txt3
               Lcd_Keypad_3(13,14,15,94)
'              Lcd_Out(1,1,txt1)
'              Lcd_Chr(2, 13, 94)
'              Lcd_Chr(2, 14, 94)
'              Lcd_Chr(2, 15, 94)
            else
            if  call_0=0 then
             kp1=kp1-1
             else
             kp1=kp1+1
             end if
            if (kp1=0) then            ' ON Mode

              txt1 = txt
               Lcd_Keypad_3(2,3,4,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 3, 94)
'             Lcd_Chr(2, 2, 94)
'             Lcd_Chr(2, 4, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
               Lcd_Keypad_3(6,7,8,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
               Lcd_Keypad_3(10,11,12,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
               Lcd_Keypad_3(1,2,3,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
               Lcd_Keypad_3(5,6,7,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
               Lcd_Keypad_3(9,10,11,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
               Lcd_Keypad_3(1,2,3,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
               Lcd_Keypad_3(6,7,8,94)
'             Lcd_Out(1,1,txt1)
'             Lcd_Chr(2, 6, 94)
'             Lcd_Chr(2, 7, 94)
'             Lcd_Chr(2, 8, 94)
            end if


            end if
 '**************************************************************************************************
  end sub

'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}

 sub procedure Keypad_Relay_set__date_time01()
'   dim kp1, ok1  as integer
'     dim txt3 as string[11]
'     ok1  as integer
   Lcd_0()
   txt = "<mod1 mode2 mod3>"
   txt2 = "<mod4 mode5 mod6>"
   txt3="< mod7 <Exit> >"
  Lcd_Keypad_3(3,2,4,94)
'  Lcd_Out(1,1,txt1)
'  Lcd_Chr(2, 3, 94)
'  Lcd_Chr(2, 2, 94)
'  Lcd_Chr(2, 4, 94)
  Delay_ms(500)                    ' delay 2 sec
  kp1=0
'  ok1=0


     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (PIND0_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state=0
'       while_satate_in_1=0
        kp1=1
       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1,txt1)
      Delay_mS(500)
       Lcd_0()
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
'       Delay_mS(500)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
        lcd_key_mode_day(kp1,7,0)

      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
           lcd_key_mode_day(kp1,7,1)

'      Delay_mS(500)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
'      if (kp1=0) then
'        LCD_Out(1,1, "Setting is actived")  ''Show on LCD
'      else
'        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
'      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
'      Delay_mS(500)
      end if

      Delay_mS(1500)
   wend

'


          select case kp1
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp1 = 0  ' 1               ' ??? ????? ???? ? ?????? ????? ? ????

'              txt1 = " On  Off  <Exit>"
'              Keypad_Relay_set__date_time()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Case  Ok is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 1

'                Shamsi_call()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
              kp1 = 1  ' 1               ' ????? ???? ? ????? ???

          end select


 end sub
 '**************************************************************************************************

 '**************************************************************************************************


 sub procedure Keypad_Relay_set_Mode()
   dim kp1, ok1  as integer
   Lcd_0()
   txt1 = "<mod1 mod2 mod3>"
    txt = "<mod1 mod2 mod3>"
   txt2 = "<mod4 mod5 mod6>"
   txt3=  "<mod7   <Exit> >"
   WDTCR = 0x00 ''whatchdog offing
'  Lcd_Keypad_3(3,2,4,94)
  Lcd_Out(1,1,txt1)
  Lcd_Chr(2, 3, 94)
  Lcd_Chr(2, 2, 94)
  Lcd_Chr(2, 4, 94)
  Delay_ms(500)                    ' delay 2 sec
  kp1=0
'  ok1=0


     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (PIND0_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state=0
       while_satate_in_1=0
        kp1=1
       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1,txt1)
      Delay_mS(500)
       Lcd_0()
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
'       Delay_mS(500)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
            Lcd_0()
'            lcd_key_mode_day(kp1,7,0)
'Lcd_0()
'   txt = "<mode1  mode2 mode3 >"
'   txt2 = "<mode4  mode5 mode6>"
'   txt3=" mode7 <Exit>   >"
            txt1 =txt
           if (kp1=0) then  '<Exit mode>
              kp1=7
              txt1 = txt3
'               Lcd_Keypad_3(13,14,15,94)
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 13, 94)
              Lcd_Chr(2, 14, 94)
              Lcd_Chr(2, 15, 94)
            else

             kp1=kp1-1

            if (kp1=0) then            ' ON Mode

              txt1 = txt
'               Lcd_Keypad_3(2,3,4,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 8, 94)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 10, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 15, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 15, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 7, 94)
             Lcd_Chr(2, 8, 94)
            end if


            end if

      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
           Lcd_0()
'           Lcd_0()
'           txt = "< mode1  mode2 mode3 >"
'           txt2 = "< mode4  mode5 mode6>"
'           txt3=" mode7 <Exit>   >"
            txt1 =txt
           if (kp1=7) then  '<Exit mode>
              kp1=0
              txt1 = txt
'               Lcd_Keypad_3(13,14,15,94)
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 4, 94)
              Lcd_Chr(2, 2, 94)
              Lcd_Chr(2, 3, 94)
            else

             kp1=kp1+1

            if (kp1=0) then            ' ON Mode

              txt1 = txt
'               Lcd_Keypad_3(2,3,4,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 8, 94)
             Lcd_Chr(2, 9, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 13, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 14, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
            end if


            end if

'      Delay_mS(500)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
'      if (kp1=0) then
'        LCD_Out(1,1, "Setting is actived")  ''Show on LCD
'      else
'        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
'      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
'      Delay_mS(500)
      end if


   wend

'


          select case kp1
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp1 = 0  ' 1               ' ??? ????? ???? ? ?????? ????? ? ????
              chanel=kp1+1
'              txt1 = " On  Off  <Exit>"
               Keypad_Relay_set_Pwm_chanel()
'              Keypad_Relay_set__date_time(week_new,chanel,1,on_off) ''Keypad_Relay_set__date_time(dim week,chanel,Pwm_chanel,on_off2 as byte)
'              Keypad_Relay_set__date_time_stack_overflow()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Case  Ok is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 1

'                Shamsi_call()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
              kp1 = 1  ' 1               ' ????? ???? ? ????? ???

          end select


 end sub

 '**************************************************************************************************

 '**************************************************************************************************


 sub procedure Keypad_Relay_set_day()
   dim kp1, ok1  as integer
   Lcd_0()
   txt1 = "<Satd Sund Mond>"
    txt ="<Satd Sund Mond>"
   txt2 ="<Tued Wend Thud>"
   txt3="<Frid   <Exit> >"
   WDTCR = 0x00 ''whatchdog offing
'  Lcd_Keypad_3(3,2,4,94)
  Lcd_Out(1,1,txt1)
  Lcd_Chr(2, 3, 94)
  Lcd_Chr(2, 2, 94)
  Lcd_Chr(2, 4, 94)
  Delay_ms(500)                    ' delay 2 sec
  kp1=0    week_new=week
'  ok1=0


     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (PIND0_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0
       while_state=0
       while_satate_in_1=0
        kp1=1
       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1,txt1)
      Delay_mS(500)
       Lcd_0()
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
'       Delay_mS(500)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
            Lcd_0()
'            lcd_key_mode_day(kp1,7,0)
'Lcd_0()
'   txt = "<mode1  mode2 mode3 >"
'   txt2 = "<mode4  mode5 mode6>"
'   txt3=" mode7 <Exit>   >"
            txt1 =txt
           if (kp1=0) then  '<Exit mode>
              kp1=7
              txt1 = txt3
'               Lcd_Keypad_3(13,14,15,94)
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 13, 94)
              Lcd_Chr(2, 14, 94)
              Lcd_Chr(2, 15, 94)
            else

             kp1=kp1-1

            if (kp1=0) then            ' ON Mode

              txt1 = txt
'               Lcd_Keypad_3(2,3,4,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 8, 94)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 10, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 15, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 15, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 7, 94)
             Lcd_Chr(2, 8, 94)
            end if


            end if

      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0
           Lcd_0()
'           Lcd_0()
'           txt = "< mode1  mode2 mode3 >"
'           txt2 = "< mode4  mode5 mode6>"
'           txt3=" mode7 <Exit>   >"
            txt1 =txt
           if (kp1=7) then  '<Exit mode>
              kp1=0
              txt1 = txt
'               Lcd_Keypad_3(13,14,15,94)
              Lcd_Out(1,1,txt1)
              Lcd_Chr(2, 4, 94)
              Lcd_Chr(2, 2, 94)
              Lcd_Chr(2, 3, 94)
            else

             kp1=kp1+1

            if (kp1=0) then            ' ON Mode

              txt1 = txt
'               Lcd_Keypad_3(2,3,4,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if

            if (kp1=1) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 8, 94)
             Lcd_Chr(2, 9, 94)
            end if
            if (kp1=2) then            ' Off  Mode

              txt1 = txt
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 14, 94)
             Lcd_Chr(2, 13, 94)
            end if
            if (kp1=3) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=4) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 9, 94)
             Lcd_Chr(2, 10, 94)
             Lcd_Chr(2, 8, 94)
            end if
            if (kp1=5) then            ' Off  Mode

              txt1 = txt2
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 14, 94)
            end if
            if (kp1=6) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 4, 94)
             Lcd_Chr(2, 2, 94)
             Lcd_Chr(2, 3, 94)
            end if
            if (kp1=7) then            ' Off  Mode

              txt1 = txt3
'               Lcd_Keypad_3(6,7,8,94)
             Lcd_Out(1,1,txt1)
             Lcd_Chr(2, 12, 94)
             Lcd_Chr(2, 13, 94)
             Lcd_Chr(2, 14, 94)
            end if


            end if

'      Delay_mS(500)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
'      if (kp1=0) then
'        LCD_Out(1,1, "Setting is actived")  ''Show on LCD
'      else
'        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
'      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
'      Delay_mS(500)
      end if


   wend

'
          if kp=7 then
            inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
          else
           week_new=kp1+1

               Keypad_Relay_set_Mode()
'              Keypad_Relay_set__date_time(2,chanel,1,1) ''Keypad_Relay_set__date_time(dim week,chanel,Pwm_chanel,on_off2 as byte)
'              Keypad_Relay_set__date_time_stack_overflow()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
          end if

          select case kp1
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp1 = 0  ' 1               ' ??? ????? ???? ? ?????? ????? ? ????
'              chanel=kp1
'              txt1 = " On  Off  <Exit>"
               week_new=kp1+1
'               inttostr(week_new,txt)
'                LCD_Out(1,1, txt)
'                Delay_mS(1500)
'               Keypad_Relay_set_Mode()
'              Keypad_Relay_set__date_time(2,chanel,1,1) ''Keypad_Relay_set__date_time(dim week,chanel,Pwm_chanel,on_off2 as byte)
'              Keypad_Relay_set__date_time_stack_overflow()
'              LCD_Out(2,1, "end of 968 lin keypad ")  ''Show on LCD
'              Delay_mS(1500)
'                Keypad_3()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
'                LCD_Out(2,1, "Case  Ok is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 1

'                Shamsi_call()
                inttostr(kp1,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
'                inttostr(kp1,txt)
'                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Exit is selected ")  ''Show on LCD
              kp1 = 1  ' 1               ' ????? ???? ? ????? ???

          end select


 end sub

 '**************************************************************************************************

'**************************************************************************************************
'* Keypad PROGRAM
'**************************************************************************************************}
 sub procedure Keypad_3()

'  dim oldstate,oldstate_up,oldstate_down,oldstate_ok,oldstate_ww,while_state as bit
'  dim kp,ok,k_set as  integer
  kp=0
  ok=0



     oldstate = 0
     oldstate_up=0
     oldstate_down=0
     oldstate_ok=0
     oldstate_ww=0
     while_state=1
     while_state_blinking=1
     while_satate_in_1=1
     txt1 = "Calen Lamps <Ex>"
'      txt1 = ttt
'     while (while_state_blinking)
'                 Lcd_Cmd(_LCD_BLINK_CURSOR_ON)
                 Delay_mS(500)
                  Lcd_Keypad_3(4,2,3,94)
'                 txt1 = "Cal Rel Pwm <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 1, 94)
'                 Lcd_Chr(2, 2, 94)
'                 Lcd_Chr(2, 3, 94)
'                 Delay_mS(500)
'                 txt1 = "    Rel Pwm <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 1, " ")
'                 Lcd_Chr(2, 2, " ")
'                 Lcd_Chr(2, 3, " ")
'                Keypad_Blinking( kp,3,0,while_satate_in_1)
'                while_satate_in_1=while_satat
'     wend
'     txt1 = "LOOP"
'       Lcd_Out(1,1,txt1)
'       Delay_mS(1100)
     while_satate_in_1=1
   while  (while_satate_in_1 )
'    if (True) then  'if (PINA1_bit <> 0) then
      if (Button(PIND, 2, 0.1, 1)<> 0) then    ' Detect logical one setting key
      Lcd_0()
      oldstate = 1                      ' Update flag
       end if
    if (oldstate and Button(PIND, 2, 0.1, 0)) then    ' Detect one-to-zero transition
       oldstate = 0 while_state=0  while_satate_in_1=0  kp=3
'       txt1 = "<Exit> is Selected"
'       Lcd_Out(1,1, "<Exit> is Selected")
'      Delay_mS(500)
'      Lcd_Cmd(_LCD_CLEAR)               ' Clear display
'      Lcd_Cmd(_LCD_CURSOR_OFF)          ' Cursor off
'      Delay_mS(500)
'       txt1 = "<Exit> is Selected"
       Lcd_Out(1,1, "<Exit> is Selected")
'       Delay_mS(500)
'      LCD_Out(2,1, " date Setting")  ''Show on LCD
'      intToStr(kp,txt)
'      LCD_Out(2,9, txt)  ''Show on LCD
       Delay_mS(200)
    end if
     if (Button(PIND, 4, 0.1, 1)<> 0) then    ' Detect logical down setting key
      oldstate_down = 1                      ' Update flag
     end if
    if (oldstate_down and Button(PIND, 4, 0.1, 0)) then    ' Detect one-to-zero transition
        oldstate_down=0
            Lcd_0()
           if (kp=0) then
              kp=2
              Lcd_Keypad_3(13,14,15,94)
'              while_state_blinking=1
'              while while_state_blinking
                txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "cal Rel Pwm     "
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 13, 94)
'                 Lcd_Chr(2, 14, 94)
'                 Lcd_Chr(2, 15, 94)
'                 Delay_mS(500)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend
            else
            kp=kp-1
              if kp =0 then

'                 while_state_blinking=1
'              while while_state_blinking
                 txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "    Rel Pwm <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 1, 94)
'                 Lcd_Chr(2, 2, 94)
'                 Lcd_Chr(2, 3, 94)
'                 Delay_mS(500)
                  Lcd_Keypad_3(4,2,3,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend
              end if
              if kp =1 then

'                 while_state_blinking=1
'              while while_state_blinking
                 txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "Cal     Pwm <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 5, 94)
'                 Lcd_Chr(2, 6, 94)
'                 Lcd_Chr(2, 7, 94)
'                 Delay_mS(500)
                 Lcd_Keypad_3(8,9,10,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend

              end if
              if kp =2 then

'                      while_state_blinking=1
'              while while_state_blinking
              txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "Cal Rel     <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 9, 94)
'                 Lcd_Chr(2, 10, 94)
'                 Lcd_Chr(2, 11, 94)

                 Lcd_Keypad_3(15,13,14,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend
              end if

            end if


      Delay_mS(100)
    end if
    if (Button(PIND, 5, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_up = 1                      ' Update flag
      end if
      if ((oldstate_up) and (Button(PIND, 5, 0.1, 0))) then    ' Detect one-to-zero transition
            oldstate_up=0 while_state_blinking=1
           Lcd_0()
           if (kp=2) then
              kp=0
'               while_state_blinking=1
'              while while_state_blinking
                 txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "    Rel Pwm <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 1, 94)
'                 Lcd_Chr(2, 2, 94)
'                 Lcd_Chr(2, 3, 94)
                  Lcd_Keypad_3(4,2,3,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend
            else
            kp=kp+1
              if kp =2 then
'               while_state_blinking=1
'              while while_state_blinking
                 txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "cal Rel Pwm     "
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 13, 94)
'                 Lcd_Chr(2, 14, 94)
'                 Lcd_Chr(2, 15, 94)
                  Lcd_Keypad_3(13,14,15,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend


              end if
              if kp =1 then

'                  while_state_blinking=1
'              while while_state_blinking
              txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "Cal     Pwm <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 5, 94)
'                 Lcd_Chr(2, 6, 94)
'                 Lcd_Chr(2, 7, 94)
                 Lcd_Keypad_3(8,9,10,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend

              end if
              if kp =2 then

'                   while_state_blinking=1
'              while while_state_blinking
              txt1 = "Calen Lamps <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Delay_mS(500)
'                 txt1 = "Cal Rel     <Ex>"
'                 Lcd_Out(1,1,txt1)
'                 Lcd_Chr(2, 9, 94)
'                 Lcd_Chr(2, 10, 94)
'                 Lcd_Chr(2, 11, 94)
                 Lcd_Keypad_3(13,14,15,94)
'                 Keypad_Blinking( kp,3,0,while_satate_in_1)
'                 while_satate_in_1=while_satat
'              wend

              end if

            end if

      Delay_mS(100)
    end if

    if (Button(PIND, 6, 0.1, 1)<> 0) then    ' Detect logical one setting key
      oldstate_ok =1
    end if
      if ((oldstate_ok) and (while_satate_in_1) and (Button(PIND, 6, 0.1, 0))) then    ' Detect one-to-zero transition
      while_state=0
      while_satate_in_1=0
      Lcd_0()
      oldstate_ok = 1                      ' Update flag
      if (kp=2) then

        LCD_Out(1,1, "Exit is aitctived")  ''Show on LCD
      else

         LCD_Out(1,1, "Setting is actived")  ''Show on LCD
      end if
'      inttostr(kp,txt)
'      LCD_Out(2,8, txt)  ''Show on LCD
      Delay_mS(100)
      end if


   wend
        inttostr(kp,txt)
        LCD_Out(1,2, txt)  ''Show on LCD
        Delay_mS(2500)
          select case kp
           'case 10: kp = 42   ' "*"        ' Uncomment this block for keypad4x3
           'case 11: kp = 48   ' "0"
           'case 12: kp = 35   ' "#"
           'default: kp += 48
            case 0
              kp = 0  ' 1
'               Shamsi_call()             ' ????? ???? ? ????? ???
                LCD_Out(2,1, "Case Calend is selected ")  ''Show on LCD
                Keypad_set__date_time()
'                Shamsi_call()
                inttostr(kp,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
                inttostr(kp,txt)
                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Calend is selected ")  ''Show on LCD
'                Delay_mS(1500)

            case 1                             ' ????? ???? ???? ? ????? ??? ??? ??
               LCD_Out(2,1, "Case Lamps is is selected ")  ''Show on LCD
'                Keypad_Relay_set__date_time()
'                 Keypad_Relay_set__date_time_1()
'                 Keypad_Relay_set__date_time01()
'                  Keypad_Relay_set_00()
'                  Keypad_Relay_set_day()
                  Keypad_Relay_set__date_time_stack_overflow_teben()
'
                 LCD_Out(2,1, "end of case Lamps ")  ''Show on LCD
'                  Delay_mS(1500)
'                Shamsi_call()
                inttostr(kp,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
                inttostr(kp,txt)
                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case Lamps is is selected ")  ''Show on LCD
'               Delay_mS(1500)
'              kp = 1  ' 1
            case 22
'              Keypad_set__relay_time()
               LCD_Out(2,1, "Case Lamps is selected ")  ''Show on LCD
'                Keypad_set__date_time()
'                Shamsi_call()
                inttostr(kp,txt)
                LCD_Out(1,1, txt)  ''Show on LCD
                inttostr(kp,txt)
                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case PWM  is selected ")  ''Show on LCD
'                Delay_mS(1500)
'              kp = 2  ' 2
            case 2
              inttostr(kp,txt)                     ' ??? ????? ???? ? ?????? ????? ? ????
                LCD_Out(1,1, txt)  ''Show on LCD
                inttostr(kp,txt)
                LCD_Out(2,9, txt)  ''Show on LCD
                LCD_Out(2,1, "Case  Exit is selected ")  ''Show on LCD
'                Delay_mS(500)
            case 4
              kp = 4  ' A
          end select
          Delay_mS(500)

     'LCD_Out(1,1, "end of loop")  ''Show on LCD
end sub

end.